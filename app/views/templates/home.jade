mixin explain(string)
	//- Replace in two passes to avoid replacing terms in the title attribute of the explanation
	for definition, index in terms
		- string = string.replace(definition.term, '<a href="#definition' + index + '"><span class="text-info" title="">' + definition.term + '</span></a>');
	for definition, index in terms
		- string = string.replace('<a href="#definition' + index + '"><span class="text-info" title="">' + definition.term + '</span></a>', '<a href="#definition' + index + '"><span class="text-info" title="' + definition.explanation + '">' + definition.term + '</span></a>');
	!= string
	
h1.page-header
	| Backlog
p.lead
	| Das Backlog enthält in Alltagssprache formulierte User Stories (Software-Anforderungen).

table#backlog.table.table-condensed.table-hover
	thead
			tr
				th
				th
					| Name
					a(href='#remark2')
						sup 2
				th Beschreibung
				th Abnahme
				th Demo
				th
					| Story Points
					a(href='#remark1')
						sup 1
					sup ,
					a(href='#remark3')
						sup 3
				th Priorität
				th Sprint
				th.hidden-print Notizen
				th Abhängig­keiten
		tbody
			for story in stories
				tr(id='"story' + story.id + '"', class=(newSprint ? ' class="newsprint"' : ''))
					td
						| #
						= story.id
					td
						= story.name
						if story.notes
							span.glyphicon.glyphicon-question-sign
					td
						+explain(story.description)
					td
						ul
							for acceptanceTerm in story.acceptanceTerms || []
								li= acceptanceTerm

					td
						ol
							for step in story.demoProcedure || []
								li= step
					td
						| P
						if story.points
							= story.points
							if story.sprint && !story.extra
								br
								//--console.log(sprints, story.sprint);
								//-TODO:= (story.points * 100 / sprints[story.sprint].points).toFixed(1) + '%'
						else if story.estPoints
							span.nonbinding(title="unverb. Schätzung")
								| (
								= story.estPoints
								| )
					td
						if story.priority
							= story.priority
							= story.priorityDuplicates
							//-TODO:if story.priorityDuplicates.length > 0
								span.text-danger(title="Folgende User Stories haben die gleiche Priorität: #" + story.priorityDuplicates.join(', #'))
									span.glyphicon.glyphicon-warning-sign
					td
						- var title = "";
						if sprints[story.sprint]
							title = sprints[story.sprint].start.format('DD.MM.YYYY') + ' - ' + sprints[story.sprint].end.format('DD.MM.YYYY')
						span.badge(title=title)
							= story.sprint 
					td.hidden-print
						ul
							for note in story.notes || []
								li=note
					td
						for dependency, index in story.dependencies || []
							if index > 0
								| ,
							a(href="#story" + dependency)
								| #
								= dependency

- var remarks = {
- 	'1': 'Werte in Klammern sind eine unverbindliche Schätzung.',
-	'2': '<span class="glyphicon glyphicon-question-sign"></span> Zu dieser User Story sind Notizen hinterlegt.',
-	'3': 'Die Prozente geben den Anteil am Gesamtaufwand (Summe aller Story Points) für den Sprint an.'
- };
each remark, id in remarks
	p
		b(id="remark" + id)
			= id
			| :
		!= remark

h1#glossary.page-header Glossar
p.lead
	| Das Glossar enthält Definitionen solcher Begriffe, die wichtig sind und möglicherweise verschieden ausgelegt werden können.

dl
	for definition, index in terms
		dt(id="definition" + index)
			= definition.term 
		dd
			+explain(definition.explanation) 

#story-modal.modal.fade
	.modal-dialog
		.modal-content
			.modal-header
				button.close(type='button', data-dismiss='modal', aria-hidden='true') ×
				h4.modal-title User Story #X
			.modal-body
				p ... TODO: Formular
			.modal-footer
				button.btn.btn-default(type='button', data-dismiss='modal') Abbrechen
				button.btn.btn-primary(type='button') Speichern
